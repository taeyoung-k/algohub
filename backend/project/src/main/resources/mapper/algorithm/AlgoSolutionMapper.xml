<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="algohub.repository.algorithm.AlgoSolutionRepo">

    <!-- 문제 해설 조회 - 1 -->
    <select id="getSolutionWriter" resultType="algohub.controller.algorithm.dto.AlgoSolutionListDto">
        select T1.a_id, T1.p_title, T1.p_link, T1.p_content, T2.code, T2.Language, (select m_name from member where m_id = T2.m_id) m_name,
        (select m_p_image from member_profile where m_p_id = T2.m_id) m_p_image, T2.s_like
        from (select a_id, p_title, p_link, p_content, m_id
                from algorithm
                where p_title = #{p_title}) T1,
        (select SC.s_id, SC.a_id, SC.m_id, SC.l_c_id, SC.code, SC.s_like, LC.language
            from source_code SC left join language_category LC
            on SC.l_c_id = LC.l_c_id) T2
        where T1.a_id = T2.a_id and T1.m_id = T2.m_id;
    </select>

    <!-- 문제 해설 조회 - 2 -->
    <select id="getSolution" resultType="algohub.controller.algorithm.dto.AlgoSolutionListDto">
        select T2.s_id, T2.code,
        (select group_concat(distinct language separator ',') language
            from algorithm A
            left join source_code SC
            on A.a_id = SC.a_id
            left join language_category LC
            on SC.l_c_id = LC.l_c_id
            where A.a_id = T1.a_id) language,
        (select m_name from member where m_id = T2.m_id) m_name,
        (select m_p_image from member_profile where m_p_id = T2.m_id) m_p_image, T2.s_like,
        (select ifnull(count(*), 0) from source_comment where s_cm_id = T2.s_id) comments
        from (select a_id, p_title, p_link, p_content, m_id
            from algorithm
            where p_title = #{p_title}) T1,
            (select SC.s_id, SC.a_id, SC.m_id, SC.l_c_id, SC.code, SC.s_like, LC.language
            from source_code SC left join language_category LC
            on SC.l_c_id = LC.l_c_id where LC.language = #{language}) T2
        where T1.a_id = T2.a_id;
    </select>

    <insert id="setSolution" parameterType="java.util.Map">
        insert into source_code (s_id, l_c_id, a_id, m_id, code, s_like)
        select (select * from (select ifnull(max(s_id)+1, 1) from source_code) s_id),
        T3.l_c_id,
        T1.a_id,
        (select m_id from member where m_name = #{current_user}) m_id,
        #{solutionData.code} code,
        0 s_like
        from algorithm T1
        left join source_code T2
        on T1.a_id = T2.a_id,
        (select l_c_id from language_category where language = #{solutionData.language}) T3,
        (select m_id from member where m_name = #{solutionData.m_name}) T4
        where T1.a_id = #{solutionData.a_id}
        group by T1.a_id;
    </insert>


    <!-- 풀이 댓글 작성 -->
    <insert id="writeSourceComment" parameterType="algohub.domain.algorithm.SourceComment">
        insert into source_comment(s_id, l_c_id, a_id, m_id, s_cm_content, s_cm_date, s_cm_like)
        values(
        #{s_id},
        (select l_c_id from source_code where s_id = #{s_id}),
        (select a_id from source_code where s_id = #{s_id}),
        (select m_id from member where m_name = #{m_name}),
        #{s_cm_content},
        date_format(now(), '%y.%m.%d %H:%i'),
        0);

        update member_profile mp, member m set mp.cm_number = mp.cm_number + 1
        where m.m_id = mp.m_p_id and m.m_name = #{m_name};
    </insert>

    <!-- 풀이 댓글 조회 -->
    <select id="getSourceCommentList" parameterType="Integer" resultType="algohub.domain.algorithm.SourceComment">
        select scm.s_cm_id, m.m_name, mp.m_p_image, scm.s_cm_content, scm.s_cm_date, scm.s_cm_like
        from source_comment scm, member m, member_profile mp
        where m.m_id = mp.m_p_id and m.m_id = scm.m_id and scm.s_id = #{s_id}
        order by scm.s_cm_like desc;
    </select>

    <!-- 풀이 댓글 수정 -->
    <update id="editSourceComment" parameterType="algohub.domain.algorithm.SourceComment">
        update source_comment set s_cm_content = #{s_cm_content} where s_cm_id = #{s_cm_id};
    </update>

    <!-- 풀이 댓글 삭제 -->
    <delete id="deleteSourceComment" parameterType="Integer">
        update member_profile mp, source_comment scm set mp.cm_number = mp.cm_number - 1
        where scm.m_id = mp.m_p_id and scm.s_cm_id = #{s_cm_id};

        delete from source_comment where s_cm_id = #{s_cm_id};
    </delete>
</mapper>