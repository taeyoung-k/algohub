<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="algohub.repository.algorithm.AlgorithmRepo">

    <!-- 알고리즘 리스트 조회 -->
    <select id="getAlgoList" resultType="algohub.controller.algorithm.dto.AlgoListDto">
        select T3.p_category, T3.p_number, T1.a_id, T1.p_title, T4.m_name, T1.p_link, group_concat(distinct T6.language separator ',') language
        from algorithm T1
        left join algorithm_category_dup T2
        on T1.a_id = T2.a_id
        left join algorithm_category T3
        on T2.a_c_id = T3.a_c_id
        left join member T4
        on T4.m_id = T1.m_id
        left join source_code T5
        on T5.a_id = T1.a_id
        left join language_category T6
        on T5.l_c_id = T6.l_c_id
        where T3.a_c_id = #{a_c_id}
        group by T1.a_id;
    </select>

    <!-- 알고리즘 문제 등록 -->
    <insert id="setAlgoSave" parameterType="java.util.Map">
        insert into algorithm values(
        (select * from (select max(a_id)+1 from algorithm) a_id),
        #{algosave.p_link},
        #{algosave.p_title},
        #{algosave.p_content},
        0,
        (select m_id from member where m_name = #{current_user}));

        <foreach collection="category" item="i">
            insert into algorithm_category_dup (a_c_d_id, a_id, a_c_id)
            select (select * from (select ifnull(max(a_c_d_id)+1, 1) from algorithm_category_dup) a_c_d_id) , T1.a_id, T2.a_c_id
            from (select max(a_id) a_id from algorithm) T1, algorithm_category T2
            where T2.p_category = #{i};

            update algorithm_category
            set p_number = p_number + 1
            where p_category = #{i};
        </foreach>

        insert into source_code(s_id, l_c_id, a_id, m_id, code, s_like)
        select (select * from (select ifnull(max(s_id)+1, 1) from source_code) s_id), T1.l_c_id, max(T2.a_id), (select m_id from member where m_name = #{current_user}) m_id, #{algosave.code}, 0
        from (select LC.l_c_id, LC.language, SC.a_id
        from source_code SC
        right join language_category LC
        on SC.l_c_id = LC.l_c_id
        where language = #{algosave.language}) T1, algorithm T2;

        update member_profile
        set post_number = post_number + 1
        where m_p_id = (select m_id
        from member
        where m_name = #{current_user});
    </insert>

    <!-- 알고리즘 문제 검색 -->
    <select id="searchAlgorithm" resultType="algohub.domain.algorithm.AlgorithmInfo" parameterType="String">
        select *
        from
        (select a.a_id, a.p_title, a.p_link, m.m_name
        from algorithm a, member m
        where a.p_title like concat('%', #{search}, '%') and a.m_id = m.m_id) T1,
        (select sc.a_id, group_concat(distinct language separator ',') as language
        from source_code sc, language_category lc
        where sc.l_c_id = lc.l_c_id group by sc.a_id) T2
        where T1.a_id = T2.a_id;
    </select>

</mapper>